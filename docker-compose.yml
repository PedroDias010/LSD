services:
  api_lsd:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8001"]
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=myextracao
      - DB_USER=userextracao
      - DB_PASS=extracao
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    networks:
      - app-network
    restart: unless-stopped  

  db:
    image: postgres:14
    container_name: postgres_lsd
    restart: always
    environment:
      - POSTGRES_USER=userextracao      
      - POSTGRES_PASSWORD=extracao      
      - POSTGRES_DB=myextracao 
    ports:
      - "5432:5432"  
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U userextracao -d myextracao"]  
      interval: 5s
      timeout: 5s
      retries: 5
    command: postgres -c max_connections=100 -c shared_buffers=128MB
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_lsd  
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"  
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    restart: unless-stopped  

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    name: db-data  
  pgadmin-data:
    name: pgadmin-data